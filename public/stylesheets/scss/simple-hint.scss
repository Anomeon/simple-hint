/*! Simple Hint v1.0 | Copyright (c) 2014 Catalin Covic | https://github.com/catc */


@mixin prefix($name, $argument) {
	-webkit-#{$name}: #{$argument};
	-moz-#{$name}: #{$argument};
	#{$name}: #{$argument};
}
@mixin transition($content...) {
	-webkit-transition : $content;
	-moz-transition    : $content;
	transition         : $content;
}
@mixin transform ($content...) {
	-webkit-transform : $content;
	-moz-transform    : $content;
	-ms-transform     : $content;
	transform         : $content;
}
@mixin animation($content...) {
	-webkit-animation : $content;
	-moz-animation    : $content;
	animation         : $content;
}
@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
		@content;
	}
	@-moz-keyframes #{$name} {
		@content;
	}
	@keyframes #{$name} {
		@content;
	}
}

$def: #292929;


[simple-hint] {
	&:after, &:before {
		display: inline-block;
		pointer-events: none;
		position: absolute;

		// opacity: 0;
		visibility: hidden;
	}

	&:hover {
		&:after, &:before {
			// opacity: 1;
			visibility: visible;
		}
	}

	&:before {
		content: "";
		border: 5px solid transparent;
		z-index: 9998;
	}

	&:after {
		content: attr(simple-hint);
		text-align: center;
		padding: 3px 7px;
		font-size: 1.1rem;
		line-height: 1.8em;
		border-radius: 2px;
		z-index: 9999;
		color: white;

		// white-space: nowrap;
		word-wrap: break-word;
		white-space: pre;

		background: $def;
	}
}

.hint-bottom, .hint-top {
	&:before {
		right: 50%;
		margin-right: -5px;
	}
	&:after {
		left: 50%;
		@include transform( translateX(-50%));
	}
}

.hint-bottom {
	&:before {
		border-bottom-color: $def;
		// bottom: -10px;
		top: 100%;
	}
	&:after {
		margin-top: 9px;
		top: 100%;
	}
}

.hint-top {
	&:before {
		border-top-color: $def;
		// top: -10px;
		bottom: 100%;
	}
	&:after {
		bottom: 100%;
		margin-bottom: 9px;
		// bottom: 100%;
		// margin-bottom: 10px;

	}
}


.hint-left, .hint-right {
	&:before {
		top: 50%;
		margin-top: -5px;
	}
	&:after {
		top: 50%;
		@include transform(translateY(-50%));
	}
}

.hint-left {
	&:before {
		border-left-color: $def;
		left: 0;
		margin-left: -10px;
	}
	&:after {
		// left: -100%;
		// @include transform(translate(50%, -50%));
		right: 100%;
		margin-right: 10px;
		// left: 0;
		// transform: translate(-100%, -50%);

	}
}

.hint-right {
	&:before {
		border-right-color: $def;
		right: 0;
		margin-right: -10px;
		// left: 100%;
	}
	&:after {
		left: 100%;
		margin-left: 10px;


	}
}


// persist
.hint-persist {
	&:before, &:after {
		// opacity: 1;
		visibility: visible;
	}
}

// sizing
.hint-small:after { width: 200px; }
.hint-med:after { width: 300px; }
.hint-big:after { width: 450px; }


// opacity fade + delay
[class*="hint-fade"] {
	&:before, &:after {
		@include transition(opacity 0.5s ease);
		opacity: 0;
	}
	&:hover:before, &:hover:after{
		opacity: 1;
	}

	// delay
	&[class*="-d-short"] {
		&:hover:before, &:hover:after {
			@include prefix(transition-delay, 0.5s)
		}
	}

	&[class*="-d-med"] {
		&:hover:before, &:hover:after {
			@include prefix(transition-delay, 1s)
		}
	}

	&[class*="-d-long"] {
		&:hover:before, &:hover:after {
			@include prefix(transition-delay, 2s)
		}
	}
}


// animation keyframes
@include keyframes(top){
	from { 
		bottom: 125%; 
		opacity: 0;
	}
	
}
@include keyframes(bottom){
	from { 
		top: 125%;
		opacity: 0;
	}
}
@include keyframes(right){
	from {
		margin-right: -35px;
		margin-left: 35px;
		opacity: 0;
	}
}
@include keyframes(left){
	from {
		margin-left: -35px;
		margin-right: 35px;
		opacity: 0;
	}
}

// animation + delay
[class*="hint-anim"] {
	&:after, &:before {
		@include prefix(animation-fill-mode, both);
		@include prefix(animation-duration, 0.3s);
		@include prefix(animation-timing-function, ease);
	}

	&.hint-top {
		&:hover:before, &:hover:after {
			@include prefix(animation-name, top);
		}
	}
	&.hint-bottom {
		&:hover:before, &:hover:after {
			@include prefix(animation-name, bottom);
		}
	}
	&.hint-left {
		&:hover:before, &:hover:after {
			@include prefix(animation-name, left);
		}
	}
	&.hint-right {
		&:hover:before, &:hover:after {
			@include prefix(animation-name, right);
		}
	}

	// delay
	&[class*="-d-short"] {
		&:before, &:after {
			@include prefix(animation-delay, 0.5s);
		}
	}
	&[class*="-d-med"] {
		&:before, &:after {
			@include prefix(animation-delay, 1s);
		}
	}
	&[class*="-d-long"] {
		&:before, &:after {
			@include prefix(animation-delay, 2s);
		}
	}
}


